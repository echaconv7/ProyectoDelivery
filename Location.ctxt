#BlueJ class context
comment0.target=Location
comment0.text=\n\ Model\ a\ location\ in\ a\ city.\n\ \n\ @author\ David\ J.\ Barnes\ and\ Michael\ K\u00F6lling\n\ @version\ 2016.02.29\n\ @version\ 2024.10.07\ DP\ classes\ \n
comment1.params=x\ y
comment1.target=Location(int,\ int)
comment1.text=\n\ Model\ a\ location\ in\ the\ city.\n\ @param\ x\ The\ x\ coordinate.\ Must\ be\ positive.\n\ @param\ y\ The\ y\ coordinate.\ Must\ be\ positive.\n\ @throws\ IllegalArgumentException\ If\ a\ coordinate\ is\ negative.\n
comment2.params=
comment2.target=int\ getX()
comment2.text=\n\ @return\ The\ x\ coordinate.\n
comment3.params=
comment3.target=int\ getY()
comment3.text=\n\ @return\ The\ y\ coordinate.\n
comment4.params=destination
comment4.target=Location\ nextLocation(Location)
comment4.text=\n\ Generate\ the\ next\ location\ to\ visit\ in\ order\ to\n\ reach\ the\ destination.\n\ @param\ destination\ Where\ we\ want\ to\ get\ to.\n\ @return\ A\ location\ in\ a\ direct\ line\ from\ this\ to\n\ \ \ \ \ \ \ \ \ destination.\n
comment5.params=destination
comment5.target=int\ distance(Location)
comment5.text=\n\ Determine\ the\ number\ of\ movements\ required\ to\ get\n\ from\ here\ to\ the\ destination.\n\ @param\ destination\ The\ required\ destination.\n\ @return\ the\ number\ of\ movement\ steps.\n
comment6.params=
comment6.target=java.lang.String\ getStringConcatenateLocation()
comment6.text=\n\ @return\ \ string\ de\ las\ coordenadas\ separadas\ con\ un\ guion.\n
comment7.params=
comment7.target=java.lang.String\ toString()
comment7.text=\n\ @return\ A\ representation\ of\ the\ location.\n
comment8.params=other
comment8.target=boolean\ equals(java.lang.Object)
comment8.text=\n\ Implement\ content\ equality\ for\ locations.\n\ @return\ true\ if\ this\ location\ matches\ the\ other,\ false\ otherwise.\n
comment9.params=
comment9.target=int\ hashCode()
comment9.text=\n\ Use\ the\ top\ 16\ bits\ for\ the\ y\ value\ and\ the\ bottom\ for\ the\ x.\n\ Except\ for\ very\ big\ grids,\ this\ should\ give\ a\ unique\ hash\ code\n\ for\ each\ (x,\ y)\ pair.\n\ @return\ A\ hashcode\ for\ the\ location.\n
numComments=10
